
Sterowanie_szafa.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000054c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  0000054c  000005e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  00800062  00800062  000005e2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005e2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000614  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000650  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006ad  00000000  00000000  000006b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000004e6  00000000  00000000  00000d5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003b9  00000000  00000000  00001243  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000014c  00000000  00000000  000015fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000430  00000000  00000000  00001748  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002a4  00000000  00000000  00001b78  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00001e1c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	29 c0       	rjmp	.+82     	; 0x56 <__vector_1>
   4:	27 c0       	rjmp	.+78     	; 0x54 <__bad_interrupt>
   6:	38 c0       	rjmp	.+112    	; 0x78 <__vector_3>
   8:	25 c0       	rjmp	.+74     	; 0x54 <__bad_interrupt>
   a:	24 c0       	rjmp	.+72     	; 0x54 <__bad_interrupt>
   c:	23 c0       	rjmp	.+70     	; 0x54 <__bad_interrupt>
   e:	22 c0       	rjmp	.+68     	; 0x54 <__bad_interrupt>
  10:	21 c0       	rjmp	.+66     	; 0x54 <__bad_interrupt>
  12:	20 c0       	rjmp	.+64     	; 0x54 <__bad_interrupt>
  14:	1f c0       	rjmp	.+62     	; 0x54 <__bad_interrupt>
  16:	1e c0       	rjmp	.+60     	; 0x54 <__bad_interrupt>
  18:	1d c0       	rjmp	.+58     	; 0x54 <__bad_interrupt>
  1a:	1c c0       	rjmp	.+56     	; 0x54 <__bad_interrupt>
  1c:	1b c0       	rjmp	.+54     	; 0x54 <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_copy_data>:
  2a:	10 e0       	ldi	r17, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	ec e4       	ldi	r30, 0x4C	; 76
  32:	f5 e0       	ldi	r31, 0x05	; 5
  34:	02 c0       	rjmp	.+4      	; 0x3a <__do_copy_data+0x10>
  36:	05 90       	lpm	r0, Z+
  38:	0d 92       	st	X+, r0
  3a:	a2 36       	cpi	r26, 0x62	; 98
  3c:	b1 07       	cpc	r27, r17
  3e:	d9 f7       	brne	.-10     	; 0x36 <__do_copy_data+0xc>

00000040 <__do_clear_bss>:
  40:	20 e0       	ldi	r18, 0x00	; 0
  42:	a2 e6       	ldi	r26, 0x62	; 98
  44:	b0 e0       	ldi	r27, 0x00	; 0
  46:	01 c0       	rjmp	.+2      	; 0x4a <.do_clear_bss_start>

00000048 <.do_clear_bss_loop>:
  48:	1d 92       	st	X+, r1

0000004a <.do_clear_bss_start>:
  4a:	ae 36       	cpi	r26, 0x6E	; 110
  4c:	b2 07       	cpc	r27, r18
  4e:	e1 f7       	brne	.-8      	; 0x48 <.do_clear_bss_loop>
  50:	98 d1       	rcall	.+816    	; 0x382 <main>
  52:	7a c2       	rjmp	.+1268   	; 0x548 <_exit>

00000054 <__bad_interrupt>:
  54:	d5 cf       	rjmp	.-86     	; 0x0 <__vectors>

00000056 <__vector_1>:
}
void set_transistor_gate_as_PWM_output_min(){
		OCR0B = 255;
		DDRB |= (1<<TRANSISTOR_PWM_PIN);
		TCCR0B |= (1<<CS01);
		TCCR0A |= (1<<COM0B1)|(1<<COM0B0)|(1<<WGM01)|(1<<WGM00);
  56:	1f 92       	push	r1
  58:	0f 92       	push	r0
  5a:	0f b6       	in	r0, 0x3f	; 63
  5c:	0f 92       	push	r0
  5e:	11 24       	eor	r1, r1
  60:	8f 93       	push	r24
  62:	81 e0       	ldi	r24, 0x01	; 1
  64:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <FLAG_State_Request_Change_Remote>
  68:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <FLAG_Change_Prevent_Debounce>
  6c:	8f 91       	pop	r24
  6e:	0f 90       	pop	r0
  70:	0f be       	out	0x3f, r0	; 63
  72:	0f 90       	pop	r0
  74:	1f 90       	pop	r1
  76:	18 95       	reti

00000078 <__vector_3>:
  78:	1f 92       	push	r1
  7a:	0f 92       	push	r0
  7c:	0f b6       	in	r0, 0x3f	; 63
  7e:	0f 92       	push	r0
  80:	11 24       	eor	r1, r1
  82:	2f 93       	push	r18
  84:	3f 93       	push	r19
  86:	4f 93       	push	r20
  88:	5f 93       	push	r21
  8a:	6f 93       	push	r22
  8c:	7f 93       	push	r23
  8e:	8f 93       	push	r24
  90:	9f 93       	push	r25
  92:	af 93       	push	r26
  94:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__data_end>
  98:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__data_end+0x1>
  9c:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__data_end+0x2>
  a0:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__data_end+0x3>
  a4:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <__data_end+0x4>
  a8:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <__data_end+0x5>
  ac:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_end+0x6>
  b0:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <__data_end+0x7>
  b4:	a1 e0       	ldi	r26, 0x01	; 1
  b6:	1c d2       	rcall	.+1080   	; 0x4f0 <__adddi3_s8>
  b8:	20 93 62 00 	sts	0x0062, r18	; 0x800062 <__data_end>
  bc:	30 93 63 00 	sts	0x0063, r19	; 0x800063 <__data_end+0x1>
  c0:	40 93 64 00 	sts	0x0064, r20	; 0x800064 <__data_end+0x2>
  c4:	50 93 65 00 	sts	0x0065, r21	; 0x800065 <__data_end+0x3>
  c8:	60 93 66 00 	sts	0x0066, r22	; 0x800066 <__data_end+0x4>
  cc:	70 93 67 00 	sts	0x0067, r23	; 0x800067 <__data_end+0x5>
  d0:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__data_end+0x6>
  d4:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__data_end+0x7>
  d8:	af 91       	pop	r26
  da:	9f 91       	pop	r25
  dc:	8f 91       	pop	r24
  de:	7f 91       	pop	r23
  e0:	6f 91       	pop	r22
  e2:	5f 91       	pop	r21
  e4:	4f 91       	pop	r20
  e6:	3f 91       	pop	r19
  e8:	2f 91       	pop	r18
  ea:	0f 90       	pop	r0
  ec:	0f be       	out	0x3f, r0	; 63
  ee:	0f 90       	pop	r0
  f0:	1f 90       	pop	r1
  f2:	18 95       	reti

000000f4 <turn_on_int0>:
  f4:	85 b7       	in	r24, 0x35	; 53
  f6:	83 60       	ori	r24, 0x03	; 3
  f8:	85 bf       	out	0x35, r24	; 53
  fa:	8b b7       	in	r24, 0x3b	; 59
  fc:	80 64       	ori	r24, 0x40	; 64
  fe:	8b bf       	out	0x3b, r24	; 59
 100:	08 95       	ret

00000102 <set_transistor_gate_as_PWM_output_full>:
 102:	18 bc       	out	0x28, r1	; 40
 104:	87 b3       	in	r24, 0x17	; 23
 106:	82 60       	ori	r24, 0x02	; 2
 108:	87 bb       	out	0x17, r24	; 23
 10a:	8a b5       	in	r24, 0x2a	; 42
 10c:	83 63       	ori	r24, 0x33	; 51
 10e:	8a bd       	out	0x2a, r24	; 42
 110:	83 b7       	in	r24, 0x33	; 51
 112:	82 60       	ori	r24, 0x02	; 2
 114:	83 bf       	out	0x33, r24	; 51
 116:	08 95       	ret

00000118 <turn_on_timer1>:
		return;	
}


void turn_on_timer1() {
	TIMSK |= (1<<OCIE1A);
 118:	89 b7       	in	r24, 0x39	; 57
 11a:	80 64       	ori	r24, 0x40	; 64
 11c:	89 bf       	out	0x39, r24	; 57
	OCR1A = 60;
 11e:	8c e3       	ldi	r24, 0x3C	; 60
 120:	8e bd       	out	0x2e, r24	; 46
	TCCR1 |= (1<<CTC1);
 122:	80 b7       	in	r24, 0x30	; 48
 124:	80 68       	ori	r24, 0x80	; 128
 126:	80 bf       	out	0x30, r24	; 48
	TCCR1 |= (1<<CS11)|(1<<CS10);
 128:	80 b7       	in	r24, 0x30	; 48
 12a:	83 60       	ori	r24, 0x03	; 3
 12c:	80 bf       	out	0x30, r24	; 48
	miliseconds = 0;
 12e:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
 132:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
 136:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end+0x2>
 13a:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__data_end+0x3>
 13e:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__data_end+0x4>
 142:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__data_end+0x5>
 146:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__data_end+0x6>
 14a:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__data_end+0x7>
 14e:	08 95       	ret

00000150 <turn_off_timer1>:
}

void turn_off_timer1() {
	TCCR1 &= 0b11110000;
 150:	80 b7       	in	r24, 0x30	; 48
 152:	80 7f       	andi	r24, 0xF0	; 240
 154:	80 bf       	out	0x30, r24	; 48
 156:	08 95       	ret

00000158 <change_state>:
}

void change_state(int target_state, int timeout_in_seconds){
 158:	2f 92       	push	r2
 15a:	3f 92       	push	r3
 15c:	4f 92       	push	r4
 15e:	5f 92       	push	r5
 160:	6f 92       	push	r6
 162:	7f 92       	push	r7
 164:	8f 92       	push	r8
 166:	9f 92       	push	r9
 168:	af 92       	push	r10
 16a:	bf 92       	push	r11
 16c:	cf 92       	push	r12
 16e:	df 92       	push	r13
 170:	ef 92       	push	r14
 172:	ff 92       	push	r15
 174:	0f 93       	push	r16
 176:	1f 93       	push	r17
 178:	cf 93       	push	r28
 17a:	df 93       	push	r29
 17c:	cd b7       	in	r28, 0x3d	; 61
 17e:	de b7       	in	r29, 0x3e	; 62
 180:	2b 97       	sbiw	r28, 0x0b	; 11
 182:	0f b6       	in	r0, 0x3f	; 63
 184:	f8 94       	cli
 186:	de bf       	out	0x3e, r29	; 62
 188:	0f be       	out	0x3f, r0	; 63
 18a:	cd bf       	out	0x3d, r28	; 61
 18c:	99 87       	std	Y+9, r25	; 0x09
 18e:	88 87       	std	Y+8, r24	; 0x08
	uint64_t period = timeout_in_seconds * 1000 / 255;
 190:	cb 01       	movw	r24, r22
 192:	88 0f       	add	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	82 95       	swap	r24
 198:	92 95       	swap	r25
 19a:	90 7f       	andi	r25, 0xF0	; 240
 19c:	98 27       	eor	r25, r24
 19e:	80 7f       	andi	r24, 0xF0	; 240
 1a0:	98 27       	eor	r25, r24
 1a2:	86 1b       	sub	r24, r22
 1a4:	97 0b       	sbc	r25, r23
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	68 0f       	add	r22, r24
 1b0:	79 1f       	adc	r23, r25
 1b2:	cb 01       	movw	r24, r22
 1b4:	88 0f       	add	r24, r24
 1b6:	99 1f       	adc	r25, r25
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	88 0f       	add	r24, r24
 1be:	99 1f       	adc	r25, r25
 1c0:	6f ef       	ldi	r22, 0xFF	; 255
 1c2:	70 e0       	ldi	r23, 0x00	; 0
 1c4:	36 d1       	rcall	.+620    	; 0x432 <__divmodhi4>
 1c6:	69 83       	std	Y+1, r22	; 0x01
 1c8:	7a 83       	std	Y+2, r23	; 0x02
 1ca:	77 0f       	add	r23, r23
 1cc:	77 0b       	sbc	r23, r23
 1ce:	7a 87       	std	Y+10, r23	; 0x0a
 1d0:	7b 83       	std	Y+3, r23	; 0x03
 1d2:	7c 83       	std	Y+4, r23	; 0x04
 1d4:	7d 83       	std	Y+5, r23	; 0x05
 1d6:	7e 83       	std	Y+6, r23	; 0x06
 1d8:	7f 83       	std	Y+7, r23	; 0x07
	turn_on_timer1();
 1da:	9e df       	rcall	.-196    	; 0x118 <turn_on_timer1>
	if (target_state == 0)
 1dc:	88 85       	ldd	r24, Y+8	; 0x08
 1de:	99 85       	ldd	r25, Y+9	; 0x09
 1e0:	89 2b       	or	r24, r25
 1e2:	09 f4       	brne	.+2      	; 0x1e6 <change_state+0x8e>
 1e4:	45 c0       	rjmp	.+138    	; 0x270 <__stack+0x11>
 1e6:	5c c0       	rjmp	.+184    	; 0x2a0 <__stack+0x41>
	{
		//set_transistor_gate_as_PWM_output_full();
		while (duty < 255)
		{
			if ((miliseconds % period) == 0 && miliseconds != 0)
 1e8:	20 90 62 00 	lds	r2, 0x0062	; 0x800062 <__data_end>
 1ec:	30 90 63 00 	lds	r3, 0x0063	; 0x800063 <__data_end+0x1>
 1f0:	40 90 64 00 	lds	r4, 0x0064	; 0x800064 <__data_end+0x2>
 1f4:	50 90 65 00 	lds	r5, 0x0065	; 0x800065 <__data_end+0x3>
 1f8:	60 90 66 00 	lds	r6, 0x0066	; 0x800066 <__data_end+0x4>
 1fc:	70 90 67 00 	lds	r7, 0x0067	; 0x800067 <__data_end+0x5>
 200:	80 90 68 00 	lds	r8, 0x0068	; 0x800068 <__data_end+0x6>
 204:	90 90 69 00 	lds	r9, 0x0069	; 0x800069 <__data_end+0x7>
 208:	a9 80       	ldd	r10, Y+1	; 0x01
 20a:	ba 80       	ldd	r11, Y+2	; 0x02
 20c:	ca 84       	ldd	r12, Y+10	; 0x0a
 20e:	db 80       	ldd	r13, Y+3	; 0x03
 210:	ec 80       	ldd	r14, Y+4	; 0x04
 212:	fd 80       	ldd	r15, Y+5	; 0x05
 214:	0e 81       	ldd	r16, Y+6	; 0x06
 216:	1f 81       	ldd	r17, Y+7	; 0x07
 218:	22 2d       	mov	r18, r2
 21a:	33 2d       	mov	r19, r3
 21c:	44 2d       	mov	r20, r4
 21e:	55 2d       	mov	r21, r5
 220:	66 2d       	mov	r22, r6
 222:	77 2d       	mov	r23, r7
 224:	88 2d       	mov	r24, r8
 226:	99 2d       	mov	r25, r9
 228:	17 d1       	rcall	.+558    	; 0x458 <__umoddi3>
 22a:	a0 e0       	ldi	r26, 0x00	; 0
 22c:	6d d1       	rcall	.+730    	; 0x508 <__cmpdi2_s8>
 22e:	01 f5       	brne	.+64     	; 0x270 <__stack+0x11>
 230:	22 2d       	mov	r18, r2
 232:	33 2d       	mov	r19, r3
 234:	44 2d       	mov	r20, r4
 236:	55 2d       	mov	r21, r5
 238:	66 2d       	mov	r22, r6
 23a:	77 2d       	mov	r23, r7
 23c:	88 2d       	mov	r24, r8
 23e:	99 2d       	mov	r25, r9
 240:	63 d1       	rcall	.+710    	; 0x508 <__cmpdi2_s8>
 242:	b1 f0       	breq	.+44     	; 0x270 <__stack+0x11>
			{	
				miliseconds = 0;
 244:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
 248:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
 24c:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end+0x2>
 250:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__data_end+0x3>
 254:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__data_end+0x4>
 258:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__data_end+0x5>
 25c:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__data_end+0x6>
 260:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__data_end+0x7>
				duty = duty + 1;
 264:	9b 85       	ldd	r25, Y+11	; 0x0b
 266:	9f 5f       	subi	r25, 0xFF	; 255
 268:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__data_start>
				OCR0B = duty;
 26c:	98 bd       	out	0x28, r25	; 40
 26e:	00 c0       	rjmp	.+0      	; 0x270 <__stack+0x11>
	uint64_t period = timeout_in_seconds * 1000 / 255;
	turn_on_timer1();
	if (target_state == 0)
	{
		//set_transistor_gate_as_PWM_output_full();
		while (duty < 255)
 270:	90 91 60 00 	lds	r25, 0x0060	; 0x800060 <__data_start>
 274:	9b 87       	std	Y+11, r25	; 0x0b
 276:	9f 3f       	cpi	r25, 0xFF	; 255
 278:	09 f0       	breq	.+2      	; 0x27c <__stack+0x1d>
 27a:	b6 cf       	rjmp	.-148    	; 0x1e8 <change_state+0x90>
				OCR0B = duty;
			}
		}
		//PORTB |= (1<<TRANSISTOR_PWM_PIN);

		FLAG_Actual_State = 0;
 27c:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <FLAG_Actual_State>
		miliseconds = 0;
 280:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
 284:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
 288:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end+0x2>
 28c:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__data_end+0x3>
 290:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__data_end+0x4>
 294:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__data_end+0x5>
 298:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__data_end+0x6>
 29c:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__data_end+0x7>
	}
	
	if (target_state == 1)
 2a0:	88 85       	ldd	r24, Y+8	; 0x08
 2a2:	99 85       	ldd	r25, Y+9	; 0x09
 2a4:	01 97       	sbiw	r24, 0x01	; 1
 2a6:	09 f0       	breq	.+2      	; 0x2aa <__stack+0x4b>
 2a8:	4d c0       	rjmp	.+154    	; 0x344 <__stack+0xe5>
 2aa:	43 c0       	rjmp	.+134    	; 0x332 <__stack+0xd3>
	{
		//set_transistor_gate_as_PWM_output_min();
		while (duty > 0)
		{
			if ((miliseconds % period) == 0 && miliseconds != 0)
 2ac:	20 90 62 00 	lds	r2, 0x0062	; 0x800062 <__data_end>
 2b0:	30 90 63 00 	lds	r3, 0x0063	; 0x800063 <__data_end+0x1>
 2b4:	40 90 64 00 	lds	r4, 0x0064	; 0x800064 <__data_end+0x2>
 2b8:	50 90 65 00 	lds	r5, 0x0065	; 0x800065 <__data_end+0x3>
 2bc:	60 90 66 00 	lds	r6, 0x0066	; 0x800066 <__data_end+0x4>
 2c0:	70 90 67 00 	lds	r7, 0x0067	; 0x800067 <__data_end+0x5>
 2c4:	80 90 68 00 	lds	r8, 0x0068	; 0x800068 <__data_end+0x6>
 2c8:	90 90 69 00 	lds	r9, 0x0069	; 0x800069 <__data_end+0x7>
 2cc:	a9 80       	ldd	r10, Y+1	; 0x01
 2ce:	ba 80       	ldd	r11, Y+2	; 0x02
 2d0:	ca 84       	ldd	r12, Y+10	; 0x0a
 2d2:	db 80       	ldd	r13, Y+3	; 0x03
 2d4:	ec 80       	ldd	r14, Y+4	; 0x04
 2d6:	fd 80       	ldd	r15, Y+5	; 0x05
 2d8:	0e 81       	ldd	r16, Y+6	; 0x06
 2da:	1f 81       	ldd	r17, Y+7	; 0x07
 2dc:	22 2d       	mov	r18, r2
 2de:	33 2d       	mov	r19, r3
 2e0:	44 2d       	mov	r20, r4
 2e2:	55 2d       	mov	r21, r5
 2e4:	66 2d       	mov	r22, r6
 2e6:	77 2d       	mov	r23, r7
 2e8:	88 2d       	mov	r24, r8
 2ea:	99 2d       	mov	r25, r9
 2ec:	b5 d0       	rcall	.+362    	; 0x458 <__umoddi3>
 2ee:	a0 e0       	ldi	r26, 0x00	; 0
 2f0:	0b d1       	rcall	.+534    	; 0x508 <__cmpdi2_s8>
 2f2:	f9 f4       	brne	.+62     	; 0x332 <__stack+0xd3>
 2f4:	22 2d       	mov	r18, r2
 2f6:	33 2d       	mov	r19, r3
 2f8:	44 2d       	mov	r20, r4
 2fa:	55 2d       	mov	r21, r5
 2fc:	66 2d       	mov	r22, r6
 2fe:	77 2d       	mov	r23, r7
 300:	88 2d       	mov	r24, r8
 302:	99 2d       	mov	r25, r9
 304:	01 d1       	rcall	.+514    	; 0x508 <__cmpdi2_s8>
 306:	a9 f0       	breq	.+42     	; 0x332 <__stack+0xd3>
			{
				miliseconds = 0;
 308:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
 30c:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
 310:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end+0x2>
 314:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__data_end+0x3>
 318:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__data_end+0x4>
 31c:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__data_end+0x5>
 320:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__data_end+0x6>
 324:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__data_end+0x7>
				duty = duty - 1;
 328:	88 85       	ldd	r24, Y+8	; 0x08
 32a:	81 50       	subi	r24, 0x01	; 1
 32c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
				OCR0B = duty;
 330:	88 bd       	out	0x28, r24	; 40
	}
	
	if (target_state == 1)
	{
		//set_transistor_gate_as_PWM_output_min();
		while (duty > 0)
 332:	90 91 60 00 	lds	r25, 0x0060	; 0x800060 <__data_start>
 336:	98 87       	std	Y+8, r25	; 0x08
 338:	91 11       	cpse	r25, r1
 33a:	b8 cf       	rjmp	.-144    	; 0x2ac <__stack+0x4d>
				OCR0B = duty;
			}
		}
		//PORTB &= !(1<<TRANSISTOR_PWM_PIN);

		turn_off_timer1();
 33c:	09 df       	rcall	.-494    	; 0x150 <turn_off_timer1>
		FLAG_Actual_State = 1;
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <FLAG_Actual_State>

	}
	FLAG_Change_In_Progress = 0;
 344:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <FLAG_Change_In_Progress>
	FLAG_State_Request_Change_Remote = 0;
 348:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <FLAG_State_Request_Change_Remote>
	FLAG_State_Request_Change_Timer = 0;
 34c:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <FLAG_State_Request_Change_Timer>
	return;
 350:	2b 96       	adiw	r28, 0x0b	; 11
 352:	0f b6       	in	r0, 0x3f	; 63
 354:	f8 94       	cli
 356:	de bf       	out	0x3e, r29	; 62
 358:	0f be       	out	0x3f, r0	; 63
 35a:	cd bf       	out	0x3d, r28	; 61
 35c:	df 91       	pop	r29
 35e:	cf 91       	pop	r28
 360:	1f 91       	pop	r17
 362:	0f 91       	pop	r16
 364:	ff 90       	pop	r15
 366:	ef 90       	pop	r14
 368:	df 90       	pop	r13
 36a:	cf 90       	pop	r12
 36c:	bf 90       	pop	r11
 36e:	af 90       	pop	r10
 370:	9f 90       	pop	r9
 372:	8f 90       	pop	r8
 374:	7f 90       	pop	r7
 376:	6f 90       	pop	r6
 378:	5f 90       	pop	r5
 37a:	4f 90       	pop	r4
 37c:	3f 90       	pop	r3
 37e:	2f 90       	pop	r2
 380:	08 95       	ret

00000382 <main>:

}

int main(void)
{
	sei();
 382:	78 94       	sei
	DDRB &= ~(1 << RADIO_INTERRUPT);
 384:	87 b3       	in	r24, 0x17	; 23
 386:	8f 7b       	andi	r24, 0xBF	; 191
 388:	87 bb       	out	0x17, r24	; 23
	DDRB |= (1<<TRANSISTOR_PWM_PIN);
 38a:	87 b3       	in	r24, 0x17	; 23
 38c:	82 60       	ori	r24, 0x02	; 2
 38e:	87 bb       	out	0x17, r24	; 23
	turn_on_int0(); 
 390:	b1 de       	rcall	.-670    	; 0xf4 <turn_on_int0>

	set_transistor_gate_as_PWM_output_full();
 392:	b7 de       	rcall	.-658    	; 0x102 <set_transistor_gate_as_PWM_output_full>
	//PORTB |= (1<<TRANSISTOR_PWM_PIN);
	//turn_on_timer1();
    while (1) 
    {
	
		if (FLAG_State_Request_Change_Remote==1 && FLAG_Actual_State == 0 && FLAG_Change_In_Progress == 0)
 394:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <FLAG_State_Request_Change_Remote>
 398:	81 30       	cpi	r24, 0x01	; 1
 39a:	81 f4       	brne	.+32     	; 0x3bc <main+0x3a>
 39c:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <FLAG_Actual_State>
 3a0:	81 11       	cpse	r24, r1
 3a2:	0c c0       	rjmp	.+24     	; 0x3bc <main+0x3a>
 3a4:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <FLAG_Change_In_Progress>
 3a8:	81 11       	cpse	r24, r1
 3aa:	08 c0       	rjmp	.+16     	; 0x3bc <main+0x3a>
		{
			FLAG_Change_In_Progress = 1;
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <FLAG_Change_In_Progress>
			change_state(1,5);
 3b2:	65 e0       	ldi	r22, 0x05	; 5
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	ce de       	rcall	.-612    	; 0x158 <change_state>
		}
		
		if (FLAG_State_Request_Change_Remote==1 && FLAG_Actual_State == 1 && FLAG_Change_In_Progress == 0)
 3bc:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <FLAG_State_Request_Change_Remote>
 3c0:	81 30       	cpi	r24, 0x01	; 1
 3c2:	81 f4       	brne	.+32     	; 0x3e4 <main+0x62>
 3c4:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <FLAG_Actual_State>
 3c8:	81 30       	cpi	r24, 0x01	; 1
 3ca:	61 f4       	brne	.+24     	; 0x3e4 <main+0x62>
 3cc:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <FLAG_Change_In_Progress>
 3d0:	81 11       	cpse	r24, r1
 3d2:	08 c0       	rjmp	.+16     	; 0x3e4 <main+0x62>
		{
			FLAG_Change_In_Progress = 1;
 3d4:	81 e0       	ldi	r24, 0x01	; 1
 3d6:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <FLAG_Change_In_Progress>
			change_state(0,5);
 3da:	65 e0       	ldi	r22, 0x05	; 5
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	80 e0       	ldi	r24, 0x00	; 0
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	ba de       	rcall	.-652    	; 0x158 <change_state>
		}
		
		if (FLAG_Actual_State == 0 && miliseconds == (3600*1000*4))
 3e4:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <FLAG_Actual_State>
 3e8:	81 11       	cpse	r24, r1
 3ea:	d4 cf       	rjmp	.-88     	; 0x394 <main+0x12>
 3ec:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__data_end>
 3f0:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__data_end+0x1>
 3f4:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__data_end+0x2>
 3f8:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__data_end+0x3>
 3fc:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <__data_end+0x4>
 400:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <__data_end+0x5>
 404:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_end+0x6>
 408:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <__data_end+0x7>
 40c:	21 15       	cp	r18, r1
 40e:	3a 4b       	sbci	r19, 0xBA	; 186
 410:	4f 4f       	sbci	r20, 0xFF	; 255
 412:	5f 4f       	sbci	r21, 0xFF	; 255
 414:	6f 4f       	sbci	r22, 0xFF	; 255
 416:	7f 4f       	sbci	r23, 0xFF	; 255
 418:	8f 4f       	sbci	r24, 0xFF	; 255
 41a:	9f 4f       	sbci	r25, 0xFF	; 255
 41c:	09 f0       	breq	.+2      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 41e:	ba cf       	rjmp	.-140    	; 0x394 <main+0x12>
		{
			FLAG_Change_In_Progress = 1;
 420:	81 e0       	ldi	r24, 0x01	; 1
 422:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <FLAG_Change_In_Progress>
			change_state(1,3600);
 426:	60 e1       	ldi	r22, 0x10	; 16
 428:	7e e0       	ldi	r23, 0x0E	; 14
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	94 de       	rcall	.-728    	; 0x158 <change_state>
 430:	b1 cf       	rjmp	.-158    	; 0x394 <main+0x12>

00000432 <__divmodhi4>:
 432:	97 fb       	bst	r25, 7
 434:	07 2e       	mov	r0, r23
 436:	16 f4       	brtc	.+4      	; 0x43c <__divmodhi4+0xa>
 438:	00 94       	com	r0
 43a:	06 d0       	rcall	.+12     	; 0x448 <__divmodhi4_neg1>
 43c:	77 fd       	sbrc	r23, 7
 43e:	08 d0       	rcall	.+16     	; 0x450 <__divmodhi4_neg2>
 440:	6f d0       	rcall	.+222    	; 0x520 <__udivmodhi4>
 442:	07 fc       	sbrc	r0, 7
 444:	05 d0       	rcall	.+10     	; 0x450 <__divmodhi4_neg2>
 446:	3e f4       	brtc	.+14     	; 0x456 <__divmodhi4_exit>

00000448 <__divmodhi4_neg1>:
 448:	90 95       	com	r25
 44a:	81 95       	neg	r24
 44c:	9f 4f       	sbci	r25, 0xFF	; 255
 44e:	08 95       	ret

00000450 <__divmodhi4_neg2>:
 450:	70 95       	com	r23
 452:	61 95       	neg	r22
 454:	7f 4f       	sbci	r23, 0xFF	; 255

00000456 <__divmodhi4_exit>:
 456:	08 95       	ret

00000458 <__umoddi3>:
 458:	68 94       	set
 45a:	01 c0       	rjmp	.+2      	; 0x45e <__udivdi3_umoddi3>

0000045c <__udivdi3>:
 45c:	e8 94       	clt

0000045e <__udivdi3_umoddi3>:
 45e:	8f 92       	push	r8
 460:	9f 92       	push	r9
 462:	cf 93       	push	r28
 464:	df 93       	push	r29
 466:	05 d0       	rcall	.+10     	; 0x472 <__udivmod64>
 468:	df 91       	pop	r29
 46a:	cf 91       	pop	r28
 46c:	9f 90       	pop	r9
 46e:	8f 90       	pop	r8
 470:	08 95       	ret

00000472 <__udivmod64>:
 472:	88 24       	eor	r8, r8
 474:	99 24       	eor	r9, r9
 476:	f4 01       	movw	r30, r8
 478:	e4 01       	movw	r28, r8
 47a:	b0 e4       	ldi	r27, 0x40	; 64
 47c:	1b 2e       	mov	r1, r27
 47e:	d4 01       	movw	r26, r8
 480:	9d 15       	cp	r25, r13
 482:	8e 04       	cpc	r8, r14
 484:	9f 04       	cpc	r9, r15
 486:	e0 07       	cpc	r30, r16
 488:	f1 07       	cpc	r31, r17
 48a:	38 f4       	brcc	.+14     	; 0x49a <__udivmod64+0x28>
 48c:	fc 01       	movw	r30, r24
 48e:	4b 01       	movw	r8, r22
 490:	ca 01       	movw	r24, r20
 492:	b9 01       	movw	r22, r18
 494:	ad 01       	movw	r20, r26
 496:	9e 01       	movw	r18, r28
 498:	16 94       	lsr	r1
 49a:	22 0f       	add	r18, r18
 49c:	33 1f       	adc	r19, r19
 49e:	44 1f       	adc	r20, r20
 4a0:	55 1f       	adc	r21, r21
 4a2:	66 1f       	adc	r22, r22
 4a4:	77 1f       	adc	r23, r23
 4a6:	88 1f       	adc	r24, r24
 4a8:	99 1f       	adc	r25, r25
 4aa:	88 1c       	adc	r8, r8
 4ac:	99 1c       	adc	r9, r9
 4ae:	ee 1f       	adc	r30, r30
 4b0:	ff 1f       	adc	r31, r31
 4b2:	cc 1f       	adc	r28, r28
 4b4:	dd 1f       	adc	r29, r29
 4b6:	aa 1f       	adc	r26, r26
 4b8:	bb 1f       	adc	r27, r27
 4ba:	8a 14       	cp	r8, r10
 4bc:	9b 04       	cpc	r9, r11
 4be:	ec 05       	cpc	r30, r12
 4c0:	fd 05       	cpc	r31, r13
 4c2:	ce 05       	cpc	r28, r14
 4c4:	df 05       	cpc	r29, r15
 4c6:	a0 07       	cpc	r26, r16
 4c8:	b1 07       	cpc	r27, r17
 4ca:	48 f0       	brcs	.+18     	; 0x4de <__udivmod64+0x6c>
 4cc:	8a 18       	sub	r8, r10
 4ce:	9b 08       	sbc	r9, r11
 4d0:	ec 09       	sbc	r30, r12
 4d2:	fd 09       	sbc	r31, r13
 4d4:	ce 09       	sbc	r28, r14
 4d6:	df 09       	sbc	r29, r15
 4d8:	a0 0b       	sbc	r26, r16
 4da:	b1 0b       	sbc	r27, r17
 4dc:	21 60       	ori	r18, 0x01	; 1
 4de:	1a 94       	dec	r1
 4e0:	e1 f6       	brne	.-72     	; 0x49a <__udivmod64+0x28>
 4e2:	2e f4       	brtc	.+10     	; 0x4ee <__udivmod64+0x7c>
 4e4:	94 01       	movw	r18, r8
 4e6:	af 01       	movw	r20, r30
 4e8:	be 01       	movw	r22, r28
 4ea:	cd 01       	movw	r24, r26
 4ec:	00 0c       	add	r0, r0
 4ee:	08 95       	ret

000004f0 <__adddi3_s8>:
 4f0:	00 24       	eor	r0, r0
 4f2:	a7 fd       	sbrc	r26, 7
 4f4:	00 94       	com	r0
 4f6:	2a 0f       	add	r18, r26
 4f8:	30 1d       	adc	r19, r0
 4fa:	40 1d       	adc	r20, r0
 4fc:	50 1d       	adc	r21, r0
 4fe:	60 1d       	adc	r22, r0
 500:	70 1d       	adc	r23, r0
 502:	80 1d       	adc	r24, r0
 504:	90 1d       	adc	r25, r0
 506:	08 95       	ret

00000508 <__cmpdi2_s8>:
 508:	00 24       	eor	r0, r0
 50a:	a7 fd       	sbrc	r26, 7
 50c:	00 94       	com	r0
 50e:	2a 17       	cp	r18, r26
 510:	30 05       	cpc	r19, r0
 512:	40 05       	cpc	r20, r0
 514:	50 05       	cpc	r21, r0
 516:	60 05       	cpc	r22, r0
 518:	70 05       	cpc	r23, r0
 51a:	80 05       	cpc	r24, r0
 51c:	90 05       	cpc	r25, r0
 51e:	08 95       	ret

00000520 <__udivmodhi4>:
 520:	aa 1b       	sub	r26, r26
 522:	bb 1b       	sub	r27, r27
 524:	51 e1       	ldi	r21, 0x11	; 17
 526:	07 c0       	rjmp	.+14     	; 0x536 <__udivmodhi4_ep>

00000528 <__udivmodhi4_loop>:
 528:	aa 1f       	adc	r26, r26
 52a:	bb 1f       	adc	r27, r27
 52c:	a6 17       	cp	r26, r22
 52e:	b7 07       	cpc	r27, r23
 530:	10 f0       	brcs	.+4      	; 0x536 <__udivmodhi4_ep>
 532:	a6 1b       	sub	r26, r22
 534:	b7 0b       	sbc	r27, r23

00000536 <__udivmodhi4_ep>:
 536:	88 1f       	adc	r24, r24
 538:	99 1f       	adc	r25, r25
 53a:	5a 95       	dec	r21
 53c:	a9 f7       	brne	.-22     	; 0x528 <__udivmodhi4_loop>
 53e:	80 95       	com	r24
 540:	90 95       	com	r25
 542:	bc 01       	movw	r22, r24
 544:	cd 01       	movw	r24, r26
 546:	08 95       	ret

00000548 <_exit>:
 548:	f8 94       	cli

0000054a <__stop_program>:
 54a:	ff cf       	rjmp	.-2      	; 0x54a <__stop_program>
